package Arrays;

public class RotateArrayMinNumber {
    /*题目介绍:
        把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。
        输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。
        例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。
        NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。

      解题思路:
        简单的直接遍历就不再介绍了,不是本题的初衷,考虑使用双指针来,时间复杂度为O(log n).
        可以把旋转后的数组分为两个从小到大的有序数组.
        左侧low指针指向第一个,右侧high指针指向最后一个,然后mid为两数组的中间数字.
            1.如果mid > low 说明最小数字在mid右侧,因此low = mid;
            2.如果mid < low 说明最小数字在mid左侧,因此high = mid;
            3.直到low + 1 == high 时 high就指向我们需要的最小数字.
         上面没有包含特殊情况:
            1.没有进行旋转的数组,例如旋转个数为0.
                这时 low < high 直接返回 low 就可以了
            2.当旋转后mid == low == high时这时就没办法使用指针寻找了,需要退而求次,使用顺序查找.

    */
    
}
